name: Test

on:
  push:
    paths-ignore:
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '*.yml'
  workflow_dispatch:
  issues:
    types: [opened, edited]

#defaults:
#  run:
#    shell: bash

jobs:
  test:
    #name: ${{ matrix.runs-on }}
    runs-on: ubuntu-latest #${{ matrix.runs-on }}
    #container: ${{ matrix.container }}
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    container: [ubuntu:devel, '']
    #    runs-on: [ubuntu-latest, windows-latest, macos-latest] #[windows-2016, windows-latest, ubuntu-16.04, ubuntu-18.04, ubuntu-latest, macos-latest]
    #env:
    #  POWERSHELL_TELEMETRY_OPTOUT: 1
    steps:
      #- uses: actions/checkout@v2
      - name: test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          readarray -t labels < <(gh api graphql --paginate --jq '.data.repository.labels.nodes[].name' -f query='
            query($endCursor: String) {
              repository(name: "game-compatibility", owner: "xenia-project") {
                labels(first:100, after:$endCursor) {
                  nodes { name }
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                }
              }
            }
          ') #--jq '.data.repository.issues.nodes[].title'
          issues_json=$(gh api graphql --jq '.data.repository[]' --paginate -f query='
            query($endCursor: String) {
              repository(name: "game-compatibility", owner: "xenia-project") {
                issues(first:100, states:OPEN, after:$endCursor) {
                  nodes {
                    title
                    number
                  }
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                }
              }
            }
          ')
          readarray -t issue_numbers < <(jq -r '.nodes[].number' <<<"$issues_json")
          readarray -t issue_titles < <(jq -r '.nodes[].title' <<<"$issues_json")
          echo "${issue_numbers[@]}"
          echo "${issue_titles[@]}"
          #for (( i = 0; i <= "${#issue_numbers[@]}"; i++ )); do 
          #  echo "do something right $i"
          #done
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: test
      #    path: '*.json'
      #    if-no-files-found: error
